name: Test and Release

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      # Install and run pre-commit
      - run: |
          pip install pre-commit
          pre-commit install
          pre-commit run --all-files

  pytest:
    name: Pytest ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        config:
          - { name: "Linux", os: ubuntu-latest }
          - { name: "MacOSX", os: macos-latest }
          - { name: "Windows", os: windows-latest }

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and Run Tests
        run: |
          pip install ".[dev]"
          pip install -r tests/requirements.txt
          # Run the tests with coverage so we get a coverage report too
          pip install coverage
          coverage run --omit "*/tests/*" --source . -m pytest .
          # Print the coverage report
          coverage report -m

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v5.3.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    needs: [pre-commit, pytest]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    environment:
      name: pypi
      url: https://pypi.org/p/trame-server
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing
      contents: write # IMPORTANT: mandatory for making GitHub Releases

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Python Semantic Release
        id: release
        uses: relekang/python-semantic-release@v9.19.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package distributions to PyPI
        if: steps.release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
